#LyX 2.3 created this file. For more info see http://www.lyx.org/
\lyxformat 544
\begin_document
\begin_header
\save_transient_properties true
\origin unavailable
\textclass elsarticle
\begin_preamble
\usepackage{algorithm}
\usepackage{algpseudocode}

% specify here the journal
\journal{Curso de <<Análisis de algoritmos>>, PUJ, Bogotá, Colombia - }

% use this if you need line numbers
\end_preamble
\use_default_options false
\begin_modules
theorems-std
\end_modules
\maintain_unincluded_children false
\language spanish
\language_package default
\inputencoding auto
\fontencoding global
\font_roman "default" "default"
\font_sans "default" "default"
\font_typewriter "default" "default"
\font_math "auto" "auto"
\font_default_family default
\use_non_tex_fonts false
\font_sc false
\font_osf false
\font_sf_scale 100 100
\font_tt_scale 100 100
\use_microtype false
\use_dash_ligatures false
\graphics default
\default_output_format default
\output_sync 0
\bibtex_command bibtex
\index_command default
\paperfontsize default
\spacing single
\use_hyperref false
\papersize default
\use_geometry false
\use_package amsmath 1
\use_package amssymb 1
\use_package cancel 1
\use_package esint 1
\use_package mathdots 1
\use_package mathtools 1
\use_package mhchem 1
\use_package stackrel 1
\use_package stmaryrd 1
\use_package undertilde 1
\cite_engine natbib
\cite_engine_type authoryear
\biblio_style plainnat
\use_bibtopic false
\use_indices false
\paperorientation portrait
\suppress_date false
\justification true
\use_refstyle 0
\use_minted 0
\index Index
\shortcut idx
\color #008000
\end_index
\secnumdepth 3
\tocdepth 3
\paragraph_separation indent
\paragraph_indentation default
\is_math_indent 0
\math_numbering_side default
\quotes_style english
\dynamic_quotes 0
\papercolumns 1
\papersides 2
\paperpagestyle headings
\tracking_changes false
\output_changes false
\html_math_output 0
\html_css_as_file 0
\html_be_strict false
\end_header

\begin_body

\begin_layout BeginFrontmatter

\end_layout

\begin_layout Title
Algoritmo para solucionar las 
\begin_inset Quotes eld
\end_inset

Torres de Hanoi
\begin_inset Quotes erd
\end_inset


\begin_inset Flex Titlenotemark
status open

\begin_layout Plain Layout
t1
\end_layout

\end_inset


\end_layout

\begin_layout Title footnote
Este documento presenta la escritura formal de un algoritmo que soluciona
 el juego de las Torres de Hanoi.
\begin_inset Argument 1
status open

\begin_layout Plain Layout
t1
\end_layout

\end_inset


\end_layout

\begin_layout Author
Leonardo Flórez-Valencia
\begin_inset Argument 1
status open

\begin_layout Plain Layout
lfv
\end_layout

\end_inset


\end_layout

\begin_layout Email
florez-l@javeriana.edu.co
\end_layout

\begin_layout Address
Pontificia Universidad Javeriana, Bogotá, Colombia
\begin_inset Argument 1
status open

\begin_layout Plain Layout
lfv
\end_layout

\end_inset


\end_layout

\begin_layout Abstract
En este documento se presenta la escritura formal del problema 
\begin_inset Quotes eld
\end_inset

calcular la secuencia de pasos para resolver el juego de las Torres de Hanoi
\begin_inset Quotes erd
\end_inset

, junto con un algoritmo de solución.
\end_layout

\begin_layout Keywords
algoritmo, escritura formal, Torres de Hanoi.
\end_layout

\begin_layout EndFrontmatter

\end_layout

\begin_layout Section
Análisis del problema
\end_layout

\begin_layout Standard
Se desea escribir un algoritmo informar la secuencia de pasos que resuelven
 el juego de las torres de Hanoi.
 Antes de proponer dicha solución algorítmica, primero es importante describir
 el juego.
\end_layout

\begin_layout Definition
Las Torres de Hanoi es un rompecabezas o juego matemático inventado en 1883
 por el matemático francés Édouard Lucas.
 Es un juego de un jugador que consiste en un número de discos perforados
 de radio creciente que se apilan insertándose en uno de las tres torres
 fijadas a un tablero.
 El objetivo del juego es trasladar la pila a otro de los postes siguiendo
 las reglas:
\end_layout

\begin_layout Enumerate
solo se puede mover un disco a la vez y
\end_layout

\begin_layout Enumerate
no se puede colocar un disco más grande encima de un disco más pequeño
\end_layout

\begin_layout Standard
Un esquema de un estado del juego se presenta a continuación:
\end_layout

\begin_layout Standard
\align center
\begin_inset Graphics
	filename hanoi_schema.png
	width 75text%

\end_inset


\end_layout

\begin_layout Standard
De esta descripción del juego se puede concluir:
\end_layout

\begin_layout Enumerate
La cantidad de discos es finita y contable, entonces es un número natural
 
\begin_inset Formula $n\in\mathbb{N}$
\end_inset

.
\end_layout

\begin_layout Enumerate
El radio exacto de cada disco es irrelevante, lo único relevante es un dato
 que permita ordenar los discos, entonces el radio de cada disco se puede
 representar con un número natural 
\begin_inset Formula $r\in\mathbb{N}$
\end_inset

.
\end_layout

\begin_layout Section
Diseño del problema
\end_layout

\begin_layout Standard
El análisis anterior nos permite diseñar el problema: definir las entradas
 y salidas de un posible algoritmo de solución, que aún no está definido.
\end_layout

\begin_layout Enumerate

\emph on
\bar under
Entradas
\emph default
\bar default
:
\end_layout

\begin_deeper
\begin_layout Enumerate
\begin_inset Formula $n\in\mathbb{N}$
\end_inset

, la cantidad de discos.
\end_layout

\begin_layout Enumerate
\begin_inset Formula $\left(o,d,a\right)$
\end_inset

, una tripleta con los identificadores de las torres: 
\series bold
\emph on
\bar under
o
\series default
\emph default
\bar default
rigen, 
\series bold
\emph on
\bar under
d
\series default
\emph default
\bar default
estino y 
\series bold
\emph on
\bar under
a
\series default
\emph default
\bar default
uxiliar.
\end_layout

\end_deeper
\begin_layout Enumerate

\emph on
\bar under
Salidas
\emph default
\bar default
: 
\begin_inset Formula $S=\left\langle \left(i,j\right);i,j\in\left\{ o,d,a\right\} \right\rangle $
\end_inset

 la secuencia de pasos para solucionar el juego.
\end_layout

\begin_layout Section
Algoritmo de solución
\end_layout

\begin_layout Standard
El algoritmo de solución se basa en una estrategia de solución recurrente,
 donde se busca mover todos los discos superiores a la torre auxiliar, para
 luego mover el disco más grande al destino.
\end_layout

\begin_layout Standard
\begin_inset Float algorithm
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{algorithm}[H]
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{algorithmic}[1]
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
Require
\end_layout

\end_inset


\begin_inset ERT
status open

\begin_layout Plain Layout

{
\end_layout

\end_inset


\begin_inset Formula $n\in\mathbb{N}$
\end_inset

, the number of disks to move
\begin_inset ERT
status open

\begin_layout Plain Layout

}
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
Require
\end_layout

\end_inset


\begin_inset ERT
status open

\begin_layout Plain Layout

{
\end_layout

\end_inset


\begin_inset Formula $t\equiv\left(o,d,a\right)$
\end_inset

, a tuple with the three towers (
\series bold
\emph on
\bar under
o
\series default
\emph default
\bar default
rigin, 
\series bold
\emph on
\bar under
d
\series default
\emph default
\bar default
estination and 
\series bold
\emph on
\bar under
a
\series default
\emph default
\bar default
uxiliary)
\begin_inset ERT
status open

\begin_layout Plain Layout

}
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
Procedure
\end_layout

\end_inset


\begin_inset ERT
status open

\begin_layout Plain Layout

{
\end_layout

\end_inset

SolveTowersOfHanoi
\begin_inset ERT
status open

\begin_layout Plain Layout

}
\end_layout

\end_inset


\begin_inset ERT
status open

\begin_layout Plain Layout

{
\end_layout

\end_inset


\begin_inset Formula $n,t\equiv\left(o,d,a\right)$
\end_inset


\begin_inset ERT
status open

\begin_layout Plain Layout

}
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset ERT
status open

\begin_layout Plain Layout

  
\backslash
If
\end_layout

\end_inset


\begin_inset ERT
status open

\begin_layout Plain Layout

{
\end_layout

\end_inset


\begin_inset Formula $n=1$
\end_inset


\begin_inset ERT
status open

\begin_layout Plain Layout

}
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset ERT
status open

\begin_layout Plain Layout

    
\backslash
State
\backslash
Return
\end_layout

\end_inset


\begin_inset Formula $\left\langle t\right\rangle $
\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset ERT
status open

\begin_layout Plain Layout

  
\backslash
Else
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset ERT
status open

\begin_layout Plain Layout

    
\backslash
State
\end_layout

\end_inset


\begin_inset Formula $M\leftarrow\emptyset$
\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset ERT
status open

\begin_layout Plain Layout

    
\backslash
State
\end_layout

\end_inset


\begin_inset Formula $M\leftarrow M\bigcup\text{\Call{SolveTowersOfHanoi}{\ensuremath{n-1,\left(o,a,d\right)}}}$
\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset ERT
status open

\begin_layout Plain Layout

    
\backslash
State
\end_layout

\end_inset


\begin_inset Formula $M\leftarrow M\bigcup\text{\Call{SolveTowersOfHanoi}{\ensuremath{1,\left(o,d,a\right)}}}$
\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset ERT
status open

\begin_layout Plain Layout

    
\backslash
State
\end_layout

\end_inset


\begin_inset Formula $M\leftarrow M\bigcup\text{\Call{SolveTowersOfHanoi}{\ensuremath{n-1,\left(a,d,o\right)}}}$
\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset ERT
status open

\begin_layout Plain Layout

    
\backslash
State
\backslash
Return
\end_layout

\end_inset


\begin_inset Formula $M$
\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset ERT
status open

\begin_layout Plain Layout

  
\backslash
EndIf
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
EndProcedure
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{algorithmic}
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{algorithm}
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Solucionador de las Torres de Hanoi
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\begin_layout Subsection
Invariante
\end_layout

\begin_layout Standard
La secuencia de movimientos se actualiza respetando las reglas del juego.
\end_layout

\begin_layout Subsection
Análisis de complejidad
\end_layout

\begin_layout Standard
El algoritmo exhibe una complejidad 
\begin_inset Formula $O\left(2^{n}\right)$
\end_inset

.
\end_layout

\begin_layout Subsection
Notas de implementación
\end_layout

\begin_layout Standard
La secuencia de retorno 
\begin_inset Formula $M$
\end_inset

 debe ser implementada con una estructura lineal estilo 
\begin_inset Quotes eld
\end_inset

lista de tuplas
\begin_inset Quotes erd
\end_inset

.
 Los identificadores de las torres deben ser representados por valores finitos
 contables (números naturales o enteros o cadenas de caracteres).
\end_layout

\end_body
\end_document
